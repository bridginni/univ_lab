{
  "info": {
    "_postman_id": "f37ba255-1dbb-4739-b9e5-08590dca9209",
    "name": "MyBlog",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "3356311"
  },
  "item": [
    {
      "name": "Login Bad",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 400 for Bad Request\", function () {",
              "    pm.response.to.have.status(400);",
              "});",
              "",
              "pm.test(\"Error message is 'Bad Request'\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('error', 'Bad Request');",
              "});",
              "",
              "pm.test(\"Validation messages are present\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('message');",
              "    pm.expect(jsonData.message).to.be.an('array');",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text",
            "disabled": true
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"test6@example.com\",\n  \"password\": \"12345678\"\n}\n"
        },
        "url": {
          "raw": "http://localhost:3000/users/login",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "users",
            "login"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Login Success",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Access token is present\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('token');",
              "});",
              "",
              "",
              "pm.test(\"User email is correct\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.user).to.have.property('email', 'student1@student.sumdu.edu.ua');",
              "});",
              "",
              "pm.test(\"Token is received\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.token).to.be.a('string');",
              "",
              "    var token = jsonData.accessToken;",
              "    pm.collectionVariables.set(\"authToken\", token);",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "noauth"
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"email\": \"student1@student.sumdu.edu.ua\",\n  \"password\": \"123\"\n}\n"
        },
        "url": {
          "raw": "http://localhost:3000/users/login",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "users",
            "login"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Create Post",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Response has correct properties\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('id');",
              "    pm.expect(jsonData).to.have.property('title');",
              "    pm.expect(jsonData).to.have.property('content');",
              "    pm.expect(jsonData).to.have.property('userId');",
              "",
              "    var post_id = jsonData.id;",
              "    pm.collectionVariables.set(\"post_id\", post_id);",
              "});",
              "",
              "",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Accept",
            "value": "application/json, text/plain, */*",
            "type": "text"
          }
        ],
        "body": {
          "mode": "formdata",
          "formdata": [
            {
              "key": "picture",
              "value": "null",
              "type": "text",
              "disabled": true
            },
            {
              "key": "title",
              "value": "{{$randomLoremSentence}}",
              "type": "text"
            },
            {
              "key": "content",
              "value": "{{$randomLoremParagraphs}}",
              "type": "text"
            },
            {
              "key": "userId",
              "value": "2",
              "type": "text"
            }
          ]
        },
        "url": {
          "raw": "http://localhost:3000/posts",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "posts"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Comment",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "   pm.response.to.have.status(201);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\"text\":\"{{$randomLoremSentence}}\",\"postId\":1,\"userId\":2}"
        },
        "url": {
          "raw": "http://localhost:3000/comments",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "comments"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Delete Post",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "key": "token",
              "value": "{{authToken}}",
              "type": "string"
            }
          ]
        },
        "method": "DELETE",
        "header": [],
        "body": {
          "mode": "raw",
          "raw": ""
        },
        "url": {
          "raw": "http://localhost:3000/posts/post/{{post_id}}",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "posts",
            "post",
            "{{post_id}}"
          ]
        }
      },
      "response": []
    },
    {
      "name": "Registration",
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "   pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Response has access token\", function () {",
              "   var jsonData = pm.response.json();",
              "   pm.expect(jsonData).to.have.property('accessToken');",
              "});",
              ""
            ],
            "type": "text/javascript"
          }
        }
      ],
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json",
            "type": "text"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n   \"firstName\":\"{{$randomFirstName}}\",\n   \"lastName\":\"{{$randomLastName}}\",\n   \"email\":\"{{$randomEmail}}\",\n   \"password\":\"{{$randomPassword}}\"\n}\n"
        },
        "url": {
          "raw": "http://localhost:3000/auth/register",
          "protocol": "http",
          "host": [
            "localhost"
          ],
          "port": "3000",
          "path": [
            "auth",
            "register"
          ]
        }
      },
      "response": []
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          ""
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "post_id",
      "value": "",
      "type": "string"
    },
    {
      "key": "token",
      "value": ""
    }
  ]
}